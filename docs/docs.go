// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "info@info.info"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/hello": {
            "get": {
                "description": "Method to say hello",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hello"
                ],
                "summary": "Method to say hello",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/networks": {
            "delete": {
                "description": "Method for Delete network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "Delete network info",
                "parameters": [
                    {
                        "description": "The input for delete network",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/network.DeleteNetworkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/networks/": {
            "get": {
                "description": "Method for get networks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "Get networks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/network.ListNetworksResponse"
                        }
                    }
                }
            }
        },
        "/networks/import": {
            "post": {
                "description": "Method for import network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "Import network info",
                "parameters": [
                    {
                        "description": "The input for import network",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/network.ImportNetworkFromSourceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/network.ImportNetworkFromSourceResponse"
                        }
                    }
                }
            }
        },
        "/networks/{name}": {
            "get": {
                "description": "Method for get network info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "Get network info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/network.DescribeNetworkResponse"
                        }
                    }
                }
            }
        },
        "/wallets": {
            "post": {
                "description": "Method for create wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Create wallet info",
                "parameters": [
                    {
                        "description": "The input for create wallet",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/wallet.CreateWalletRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/wallet.CreateWalletResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Method for Delete wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Delete wallet info",
                "parameters": [
                    {
                        "description": "The input for delete wallet",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/wallet.DeleteWalletRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/wallets/": {
            "get": {
                "description": "Method for get wallets list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Get wallets list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/wallet.ListWalletsResponse"
                        }
                    }
                }
            }
        },
        "/wallets/import": {
            "post": {
                "description": "Method for import wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Import wallet info",
                "parameters": [
                    {
                        "description": "The input for import wallet",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/wallet.ImportWalletRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/wallet.ImportWalletResponse"
                        }
                    }
                }
            }
        },
        "/wallets/{id}": {
            "get": {
                "description": "Method for get wallet info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Get wallet info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pass phrase",
                        "name": "passphrase",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/wallet.GetWalletInfoResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "network.DeleteNetworkRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "network.DescribeNetworkResponse": {
            "type": "object",
            "properties": {
                "api": {
                    "type": "object",
                    "properties": {
                        "graphQLConfig": {
                            "type": "object",
                            "properties": {
                                "hosts": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "grpcConfig": {
                            "type": "object",
                            "properties": {
                                "hosts": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "retries": {
                                    "type": "integer"
                                }
                            }
                        },
                        "restConfig": {
                            "type": "object",
                            "properties": {
                                "hosts": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "console": {
                    "type": "object",
                    "properties": {
                        "localPort": {
                            "type": "integer"
                        },
                        "url": {
                            "type": "string"
                        }
                    }
                },
                "host": {
                    "type": "string"
                },
                "logLevel": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "tokenExpiry": {
                    "type": "string"
                }
            }
        },
        "network.ImportNetworkFromSourceRequest": {
            "type": "object",
            "properties": {
                "filePath": {
                    "type": "string"
                },
                "force": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "network.ImportNetworkFromSourceResponse": {
            "type": "object",
            "properties": {
                "filePath": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "network.ListNetworksResponse": {
            "type": "object",
            "properties": {
                "networks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "wallet.CreateWalletRequest": {
            "type": "object",
            "properties": {
                "passphrase": {
                    "type": "string"
                },
                "wallet": {
                    "type": "string"
                }
            }
        },
        "wallet.CreateWalletResponse": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "object",
                    "properties": {
                        "algorithm": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "version": {
                                    "type": "integer"
                                }
                            }
                        },
                        "meta": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/wallet.Meta"
                            }
                        },
                        "publicKey": {
                            "type": "string"
                        }
                    }
                },
                "wallet": {
                    "type": "object",
                    "properties": {
                        "filePath": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "recoveryPhrase": {
                            "type": "string"
                        },
                        "version": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "wallet.DeleteWalletRequest": {
            "type": "object",
            "properties": {
                "wallet": {
                    "type": "string"
                }
            }
        },
        "wallet.GetWalletInfoResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "wallet.ImportWalletRequest": {
            "type": "object",
            "properties": {
                "passphrase": {
                    "type": "string"
                },
                "recoveryPhrase": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                },
                "wallet": {
                    "type": "string"
                }
            }
        },
        "wallet.ImportWalletResponse": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "object",
                    "properties": {
                        "algorithm": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "version": {
                                    "type": "integer"
                                }
                            }
                        },
                        "meta": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/wallet.Meta"
                            }
                        },
                        "publicKey": {
                            "type": "string"
                        }
                    }
                },
                "wallet": {
                    "type": "object",
                    "properties": {
                        "filePath": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "version": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "wallet.ListWalletsResponse": {
            "type": "object",
            "properties": {
                "wallets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "wallet.Meta": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "Crypto Wallet API",
	Description: "This is a crypto wallet api",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
